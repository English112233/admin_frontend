'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = {
    data: function data() {
        return {
            tableData: [],
            fieldConfig: {}
        };
    },
    methods: {
        removeField: function removeField(field) {
            if (typeof field === 'string') {
                delete this.fieldConfig[field];
            } else {
                for (var i = 0, len = field.length; i < len; i++) {
                    delete this.fieldConfig[field[i]];
                }
            }
        },
        addField: function addField(field, value) {
            if (typeof field === 'string') {
                this.fieldConfig[field] = value;
            } else {
                for (var i in field) {
                    this.fieldConfig[i] = field[i];
                }
            }
        },
        setEntity: function setEntity(entity, fields, excludes, hideBlankField) {
            this.tableData = [];
            if (fields === '*' || fields === undefined) {
                fields = [];
                for (var key in this.fieldConfig) {
                    fields.push(key);
                }
            }
            if (excludes !== undefined) {
                if (!Array.isArray(excludes)) {
                    console.error('excludes必须是数组，列举需要排除的字段');
                    return;
                }
            } else {
                excludes = [];
            }
            if (!Array.isArray(fields)) {
                console.error('fields必须是数组，显式控制需要显示字段');
            }
            for (var i = 0, len = fields.length; i < len; i++) {
                var field = fields[i];
                if (this.$inArr(field, excludes)) {
                    continue;
                }
                var value = entity[field];
                var label = this.fieldConfig[field];
                var slot = '';
                if (_typeof(this.fieldConfig[field]) === 'object') {
                    // 控制字段是否显示
                    if (this.fieldConfig[field].hasOwnProperty('show')) {
                        if (typeof this.fieldConfig[field].show === 'function') {
                            if (this.fieldConfig[field].show(entity) === false) {
                                continue;
                            }
                        } else {
                            if (this.fieldConfig[field].show === false) {
                                continue;
                            }
                        }
                    }

                    // 获取显示信息
                    if (this.fieldConfig[field].hasOwnProperty('value')) {
                        if (typeof this.fieldConfig[field].value === 'function') {
                            value = this.fieldConfig[field].value(entity);
                        } else {
                            value = this.fieldConfig[field].value;
                        }
                    }
                    slot = this.fieldConfig[field].slot;
                    label = this.fieldConfig[field].label;
                }
                if (value === '' && hideBlankField) {
                    continue;
                }
                this.tableData.push({ label: label, value: value, slot: slot });
            }
        }
    }
};