'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require("./sytle.css");

function NotifierAlter() {
    var self = this;

    function create(msg, type) {

        var height = Math.ceil((0, _jquery2.default)(window).height() / 2);
        var tpl = '<div class="fusion_msgbox_wrap _bluesdk_notifier" id="_fusion_msgbox_wrap">' + '<span class="fusion_msgbox_board" style="top: ' + height + 'px; _top: ' + height + 'px;">' + '<span class="fusion_msgbox fusion_msgbox_left_' + type + '">' + '<span class="fusion_msgbox_left"></span>' + '<span class="fusion_msgbox_left_icon"></span>' + msg + '<span class="fusion_msgbox_right"></span>' + '</span>' + '</span>' + '</div>';
        (0, _jquery2.default)('body').append(tpl);
    }

    function remove() {
        var e = (0, _jquery2.default)('#_fusion_msgbox_wrap');
        if (e && e.length > 0) {
            e.remove();
        }
        clearTimeout(self.time);
    }

    function show(msg, type, timeout) {
        remove();
        create(msg, type);
        if (timeout === 0) return;
        if (!timeout || typeof timeout !== 'number') timeout = 3000;
        self.time = setTimeout(function () {
            self.hide();
        }, timeout);
    }

    /************************开放方法************************/
    self.loading = function (msg, timeout) {
        show(msg, 'loading', timeout);
    };

    self.error = function (msg, timeout) {
        if ((typeof msg === 'undefined' ? 'undefined' : _typeof(msg)) === 'object') {
            for (var i in msg) {
                if (msg.hasOwnProperty(i)) {
                    self.error(msg[i], timeout);
                    return;
                }
            }
        }
        show(msg, 'warn', timeout);
    };

    self.info = function (msg, timeout) {
        show(msg, 'info', timeout);
    };

    self.success = function (msg, timeout) {
        show(msg, 'ok', timeout);
    };

    self.hide = function () {
        remove();
    };

    self.clear = function () {
        remove();
    };
}

exports.default = new NotifierAlter();