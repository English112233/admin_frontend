import $ from 'jquery';
require("./sytle.css");

function NotifierAlter() {
    let self = this;

    function create(msg, type) {

        let height = Math.ceil(($(window).height()) / 2);
        let tpl = '<div class="fusion_msgbox_wrap _bluesdk_notifier" id="_fusion_msgbox_wrap">' +
            '<span class="fusion_msgbox_board" style="top: ' + height + 'px; _top: ' + height + 'px;">' +
            '<span class="fusion_msgbox fusion_msgbox_left_' + type + '">' +
            '<span class="fusion_msgbox_left"></span>' +
            '<span class="fusion_msgbox_left_icon"></span>' + msg +
            '<span class="fusion_msgbox_right"></span>' +
            '</span>' +
            '</span>' +
            '</div>';
        $('body').append(tpl);
    }


    function remove() {
        let e = $('#_fusion_msgbox_wrap');
        if (e && e.length > 0) {
            e.remove();
        }
        clearTimeout(self.time);
    }

    function show(msg, type, timeout) {
        remove();
        create(msg, type);
        if (timeout === 0)return;
        if (!timeout || (typeof timeout !== 'number')) timeout = 3000;
        self.time = setTimeout(function () {
            self.hide();
        }, timeout);
    }


    /************************开放方法************************/
    self.loading = function (msg, timeout) {
        show(msg, 'loading', timeout);
    };

    self.error = function (msg, timeout) {
        if (typeof msg === 'object') {
            for (let i in msg) {
                if (msg.hasOwnProperty(i)) {
                    self.error(msg[i], timeout);
                    return;
                }
            }
        }
        show(msg, 'warn', timeout);
    };

    self.info = function (msg, timeout) {
        show(msg, 'info', timeout);
    };

    self.success = function (msg, timeout) {
        show(msg, 'ok', timeout);
    };

    self.hide = function () {
        remove();
    };

    self.clear = function () {
        remove();
    };
}


export default new NotifierAlter();

